{"version":3,"sources":["../../lib/swagger-express-ts-lib/src/i-swagger.ts"],"names":[],"mappings":"","file":"i-swagger.js","sourcesContent":["import { ISwaggerSecurityDefinition } from './swagger.builder';\r\nexport interface ISwaggerLicense {\r\n    name: string;\r\n    url?: string;\r\n}\r\n\r\nexport interface ISwaggerContact {\r\n    name?: string;\r\n    url?: string;\r\n    email?: string;\r\n}\r\n\r\nexport interface ISwaggerInfo {\r\n    title: string;\r\n    description?: string;\r\n    termsOfService?: string;\r\n    contact?: ISwaggerContact;\r\n    license?: ISwaggerLicense;\r\n    version: string;\r\n}\r\n\r\nexport interface ISwaggerVariableServer {\r\n    enum?: [string];\r\n    default: string;\r\n    description?: string;\r\n}\r\n\r\nexport interface ISwaggerServer {\r\n    url: string;\r\n    description?: string;\r\n    variables: [ISwaggerVariableServer]; // TODO : Fix it\r\n}\r\n\r\nexport interface ISwaggerExternalDocs {\r\n    description?: string;\r\n    url: string;\r\n}\r\n\r\nexport interface ISwaggerOperationParameter {\r\n    name: string;\r\n    in: string;\r\n    type?: string;\r\n    items?: {\r\n      type?: string;\r\n    };\r\n    format?: string;\r\n    description?: string;\r\n    required?: boolean;\r\n    minimum?: number;\r\n    maximum?: number;\r\n    default?: number;\r\n    deprecated?: boolean;\r\n    allowEmptyValue?: boolean;\r\n    schema?: ISwaggerOperationSchema;\r\n}\r\n\r\nexport interface ISwaggerPropertySchemaOperation {\r\n    type: string;\r\n}\r\n\r\nexport interface ISwaggerOperationSchema {\r\n    type?: string;\r\n    items?: { $ref: string };\r\n    $ref?: string;\r\n    format?: string;\r\n    required?: string[]; // Array content name of property\r\n    properties?: {[key: string] : ISwaggerPropertySchemaOperation}\r\n}\r\n\r\nexport interface ISwaggerOperationSchemaItems {\r\n    $ref: string;\r\n}\r\n\r\nexport interface ISwaggerOperationResponse {\r\n    description?: string;\r\n    schema?: ISwaggerOperationSchema;\r\n}\r\n\r\nexport interface ISwaggerOperation {\r\n    tags?: string[];\r\n    summary?: string;\r\n    description?: string;\r\n    operationId: string | symbol;\r\n    parameters?: ISwaggerOperationParameter[];\r\n    produces?: string[];\r\n    consumes?: string[];\r\n    responses?: { [key: string]: ISwaggerOperationResponse };\r\n    security?: { [key: string]: any[] }[];\r\n    deprecated?: boolean;\r\n}\r\n\r\nexport interface ISwaggerTag {\r\n    name: string;\r\n    description: string;\r\n}\r\n\r\nexport interface ISwaggerPath {\r\n    get?: ISwaggerOperation;\r\n    post?: ISwaggerOperation;\r\n    put?: ISwaggerOperation;\r\n    patch?: ISwaggerOperation;\r\n    delete?: ISwaggerOperation;\r\n}\r\n\r\nexport interface ISwaggerDefinitionPropertyItems {\r\n    $ref?: string;\r\n    type?: string;\r\n}\r\n\r\nexport interface ISwaggerDefinitionProperty {\r\n    type?: string; // Example : SwaggerDefinition.Definition.Property.Type.INTEGER\r\n    format?: string; // Example : SwaggerDefinition.Definition.Property.Format.INT_64\r\n    required?: boolean;\r\n    description?: string;\r\n    enum?: string[];\r\n    items?: ISwaggerDefinitionPropertyItems;\r\n    $ref?: string;\r\n    example?: any []\r\n}\r\n\r\nexport interface ISwaggerDefinitionXML {\r\n    name: string;\r\n}\r\n\r\nexport interface ISwaggerDefinition {\r\n    type: string; // Example : SwaggerDefinition.Definition.Type.OBJECT\r\n    required?: string[];\r\n    properties: { [key: string]: ISwaggerDefinitionProperty };\r\n    xml?: ISwaggerDefinitionXML;\r\n    description?: string;\r\n}\r\n\r\nexport interface ISwagger {\r\n    basePath?: string;\r\n    openapi?: string;\r\n    info: ISwaggerInfo;\r\n    servers?: [ISwaggerServer];\r\n    paths?: { [key: string]: ISwaggerPath };\r\n    host?: string;\r\n    swagger: string;\r\n    tags?: ISwaggerTag[];\r\n    schemes: string[]; // Example : SwaggerDefinition.Scheme.HTTP\r\n    produces: string[]; // Example : SwaggerDefinition.Produce.JSON\r\n    consumes: string[]; // Example : SwaggerDefinition.Consume.JSON\r\n    definitions: { [key: string]: ISwaggerDefinition };\r\n    externalDocs?: ISwaggerExternalDocs;\r\n    securityDefinitions?: { [key: string]: ISwaggerSecurityDefinition };\r\n}\r\n"]}