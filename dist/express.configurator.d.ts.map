{"version":3,"sources":["../../lib/swagger-express-ts-lib/src/express.configurator.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAmC,MAAM,SAAS,CAAC;AAGlE,OAAO,EAAS,uBAAuB,EAAE,MAAM,mBAAmB,CAAC;AAGnE,MAAM,WAAW,sBAAsB;IACnC;;;OAGG;IACH,IAAI,CAAC,EAAE,MAAM,CAAC;IAEd;;OAEG;IACH,UAAU,CAAC,EAAE,uBAAuB,CAAC;CACxC;AAED,wBAAgB,OAAO,CAAC,OAAO,CAAC,EAAE,sBAAsB,GAAG,MAAM,CAahE","file":"express.configurator.d.ts","sourcesContent":["import { Router, Request, Response, NextFunction } from 'express';\r\nimport { SwaggerService } from './swagger.service';\r\nimport * as assert from 'assert';\r\nimport { build, ISwaggerBuildDefinition } from './swagger.builder';\r\nimport { ISwagger } from './i-swagger';\r\n\r\nexport interface ISwaggerExpressOptions {\r\n    /**\r\n     * Path of resource.\r\n     * Default is \"/api-docs/swagger.json\".\r\n     */\r\n    path?: string;\r\n\r\n    /**\r\n     * Swagger Definition.\r\n     */\r\n    definition?: ISwaggerBuildDefinition;\r\n}\r\n\r\nexport function express(options?: ISwaggerExpressOptions): Router {\r\n    let path: string = '/api-docs/swagger.json';\r\n    if (options) {\r\n        assert.ok(options.definition, 'Definition is required.');\r\n        if (options.path) {\r\n            path = options.path;\r\n        }\r\n        if (options.definition) {\r\n            build(options.definition);\r\n        }\r\n    }\r\n    const router = buildRouter(path);\r\n    return router;\r\n}\r\n\r\nfunction buildRouter(path: string): Router {\r\n    const router: Router = Router();\r\n    router.get(\r\n        path,\r\n        (request: Request, response: Response, next: NextFunction) => {\r\n            const data: ISwagger = SwaggerService.getInstance().getData();\r\n            response.json(data);\r\n        }\r\n    );\r\n    return router;\r\n}\r\n"]}