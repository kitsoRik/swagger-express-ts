{"version":3,"sources":["../../lib/swagger-express-ts-lib/src/swagger.builder.ts"],"names":[],"mappings":"AAAA,OAAO,EACH,YAAY,EAGZ,oBAAoB,EAEvB,MAAM,aAAa,CAAC;AAIrB,OAAO,EAEH,6BAA6B,EAChC,MAAM,6BAA6B,CAAC;AAErC,MAAM,WAAW,wCAAwC;IACrD,IAAI,CAAC,EAAE,MAAM,GAAG,wCAAwC,CAAC;CAC5D;AAED,MAAM,WAAW,oCAAoC;IACjD;;;OAGG;IACH,IAAI,CAAC,EAAE,MAAM,CAAC;IAEd;;;OAGG;IACH,MAAM,CAAC,EAAE,MAAM,CAAC;IAEhB;;;OAGG;IACH,QAAQ,CAAC,EAAE,OAAO,CAAC;IAEnB;;;OAGG;IACH,KAAK,CAAC,EAAE,MAAM,CAAC;IAEf;;;OAGG;IACH,IAAI,CAAC,EAAE,MAAM,EAAE,CAAC;IAEhB;;;OAGG;IACH,WAAW,CAAC,EAAE,MAAM,CAAC;IAErB;;;OAGG;IACH,QAAQ,CAAC,EAAE,MAAM,CAAC;IAElB;;OAEG;IACH,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC;CACnB;AAED,MAAM,WAAW,4BAA4B;IACzC;;OAEG;IACH,WAAW,CAAC,EAAE,MAAM,CAAC;IAErB;;OAEG;IACH,UAAU,EAAE;QAAE,CAAC,GAAG,EAAE,MAAM,GAAG,oCAAoC,CAAA;KAAE,CAAC;CACvE;AAED,MAAM,WAAW,0BAA0B;IACvC;;OAEG;IACH,IAAI,EAAE,MAAM,CAAC;IAEb;;;OAGG;IACH,EAAE,CAAC,EAAE,MAAM,CAAC;IAEZ;;;OAGG;IACH,IAAI,CAAC,EAAE,MAAM,CAAC;CACjB;AAED,MAAM,WAAW,uBAAuB;IACpC;;;OAGG;IACH,QAAQ,CAAC,EAAE,MAAM,CAAC;IAElB;;;OAGG;IACH,OAAO,CAAC,EAAE,MAAM,CAAC;IAEjB;;OAEG;IACH,IAAI,EAAE,YAAY,CAAC;IAEnB;;;OAGG;IACH,QAAQ,CAAC,EAAE,MAAM,EAAE,CAAC;IAEpB;;;OAGG;IACH,QAAQ,CAAC,EAAE,MAAM,EAAE,CAAC;IAEpB;;;OAGG;IACH,OAAO,CAAC,EAAE,MAAM,EAAE,CAAC;IAEnB;;;OAGG;IACH,IAAI,CAAC,EAAE,MAAM,CAAC;IAEd;;;OAGG;IACH,MAAM,CAAC,EAAE;QAAE,CAAC,GAAG,EAAE,MAAM,GAAG,4BAA4B,CAAA;KAAE,CAAC;IAEzD;;;OAGG;IACH,YAAY,CAAC,EAAE,oBAAoB,CAAC;IAEpC;;;OAGG;IACH,mBAAmB,CAAC,EAAE;QAAE,CAAC,GAAG,EAAE,MAAM,GAAG,0BAA0B,CAAA;KAAE,CAAC;IAEpE;;;OAGG;IACH,SAAS,CAAC,EAAE;QAAE,CAAC,GAAG,EAAE,MAAM,GAAG,6BAA6B,CAAA;KAAE,CAAC;CAChE;AAED,wBAAgB,KAAK,CAAC,eAAe,EAAE,uBAAuB,GAAG,IAAI,CA8CpE","file":"swagger.builder.d.ts","sourcesContent":["import {\r\n    ISwaggerInfo,\r\n    ISwaggerDefinition,\r\n    ISwaggerDefinitionProperty,\r\n    ISwaggerExternalDocs,\r\n    ISwaggerOperationResponse,\r\n} from './i-swagger';\r\nimport * as assert from 'assert';\r\nimport { SwaggerService } from './swagger.service';\r\nimport { SwaggerDefinitionConstant } from './swagger-definition.constant';\r\nimport {\r\n    IApiOperationArgsBaseParameter,\r\n    IApiOperationArgsBaseResponse,\r\n} from './i-api-operation-args.base';\r\n\r\nexport interface ISwaggerBuildDefinitionModelPropertyType {\r\n    type?: string | ISwaggerBuildDefinitionModelPropertyType;\r\n}\r\n\r\nexport interface ISwaggerBuildDefinitionModelProperty {\r\n    /**\r\n     * Define type of property. Example: SwaggerDefinitionConstant.Definition.Property.Type.STRING\r\n     * Optional.\r\n     */\r\n    type?: string;\r\n\r\n    /**\r\n     * Define format of property. Example: SwaggerDefinitionConstant.Definition.Property.Format.INT_64\r\n     * Optional.\r\n     */\r\n    format?: string;\r\n\r\n    /**\r\n     * Define if property is required.\r\n     * Optional. Default is false.\r\n     */\r\n    required?: boolean;\r\n\r\n    /**\r\n     * Define model.\r\n     * Optional.\r\n     */\r\n    model?: string;\r\n\r\n    /**\r\n     * Define enum;\r\n     * Optional.\r\n     */\r\n    enum?: string[];\r\n\r\n    /**\r\n     * Define description.\r\n     * Optional.\r\n     */\r\n    description?: string;\r\n\r\n    /**\r\n     * Define type of item. Example: SwaggerDefinitionConstant.Definition.Property.Type.STRING\r\n     * Optional.\r\n     */\r\n    itemType?: string;\r\n\r\n    /**\r\n     * Define example.\r\n     */\r\n    example?: any[];\r\n}\r\n\r\nexport interface ISwaggerBuildDefinitionModel {\r\n    /**\r\n     * Define description.\r\n     */\r\n    description?: string;\r\n\r\n    /**\r\n     * Define all properties of model.\r\n     */\r\n    properties: { [key: string]: ISwaggerBuildDefinitionModelProperty };\r\n}\r\n\r\nexport interface ISwaggerSecurityDefinition {\r\n    /**\r\n     * Define type of security.\r\n     */\r\n    type: string;\r\n\r\n    /**\r\n     * Define where security set.\r\n     * Optional.\r\n     */\r\n    in?: string;\r\n\r\n    /**\r\n     * Define name of security.\r\n     * Optional.\r\n     */\r\n    name?: string;\r\n}\r\n\r\nexport interface ISwaggerBuildDefinition {\r\n    /**\r\n     * Base URL for all API.\r\n     * Optional. Default is \"/\".\r\n     */\r\n    basePath?: string;\r\n\r\n    /**\r\n     * Version Open API\r\n     * Optional.\r\n     */\r\n    openapi?: string;\r\n\r\n    /**\r\n     * Metadata.\r\n     */\r\n    info: ISwaggerInfo;\r\n\r\n    /**\r\n     * Define the MIME types supported by the API for consumes. The root-level definition can be overridden in individual operations.\r\n     * Optional. Default is SwaggerDefinition.Consume.JSON = \"application/json\".\r\n     */\r\n    consumes?: string[];\r\n\r\n    /**\r\n     * Define the MIME types supported by the API for produces. The root-level definition can be overridden in individual operations.\r\n     * Optional. Default is SwaggerDefinition.Produce.JSON = \"application/json\".\r\n     */\r\n    produces?: string[];\r\n\r\n    /**\r\n     * Define schemes.\r\n     * Optional. Default is SwaggerDefinition.Scheme.HTTP = \"http\".\r\n     */\r\n    schemes?: string[];\r\n\r\n    /**\r\n     * Define host.\r\n     * Optional.\r\n     */\r\n    host?: string;\r\n\r\n    /**\r\n     * Define All Definitions.\r\n     * Optional.\r\n     */\r\n    models?: { [key: string]: ISwaggerBuildDefinitionModel };\r\n\r\n    /**\r\n     * Define external doc\r\n     * Optional.\r\n     */\r\n    externalDocs?: ISwaggerExternalDocs;\r\n\r\n    /**\r\n     * Define security definitions list.\r\n     * Optional.\r\n     */\r\n    securityDefinitions?: { [key: string]: ISwaggerSecurityDefinition };\r\n\r\n    /**\r\n     * Define global responses.\r\n     * Optional.\r\n     */\r\n    responses?: { [key: string]: IApiOperationArgsBaseResponse };\r\n}\r\n\r\nexport function build(buildDefinition: ISwaggerBuildDefinition): void {\r\n    assert.ok(buildDefinition, 'Definition are required.');\r\n    assert.ok(\r\n        buildDefinition.info,\r\n        'Informations are required. Base is { title: \"Title of my API\", version: \"1.0.0\"}'\r\n    );\r\n    if (buildDefinition.basePath) {\r\n        SwaggerService.getInstance().setBasePath(buildDefinition.basePath);\r\n    }\r\n    if (buildDefinition.openapi) {\r\n        SwaggerService.getInstance().setOpenapi(buildDefinition.openapi);\r\n    }\r\n    if (buildDefinition.info) {\r\n        SwaggerService.getInstance().setInfo(buildDefinition.info);\r\n    }\r\n    if (buildDefinition.schemes) {\r\n        SwaggerService.getInstance().setSchemes(buildDefinition.schemes);\r\n    }\r\n    if (buildDefinition.produces) {\r\n        SwaggerService.getInstance().setProduces(buildDefinition.produces);\r\n    }\r\n    if (buildDefinition.consumes) {\r\n        SwaggerService.getInstance().setConsumes(buildDefinition.consumes);\r\n    }\r\n    if (buildDefinition.host) {\r\n        SwaggerService.getInstance().setHost(buildDefinition.host);\r\n    }\r\n    if (buildDefinition.externalDocs) {\r\n        SwaggerService.getInstance().setExternalDocs(\r\n            buildDefinition.externalDocs\r\n        );\r\n    }\r\n    if (buildDefinition.securityDefinitions) {\r\n        SwaggerService.getInstance().addSecurityDefinitions(\r\n            buildDefinition.securityDefinitions\r\n        );\r\n    }\r\n    if (buildDefinition.models) {\r\n        SwaggerService.getInstance().setDefinitions(buildDefinition.models);\r\n    }\r\n    if (buildDefinition.responses) {\r\n        SwaggerService.getInstance().setGlobalResponses(\r\n            buildDefinition.responses\r\n        );\r\n    }\r\n    SwaggerService.getInstance().buildSwagger();\r\n}\r\n"]}